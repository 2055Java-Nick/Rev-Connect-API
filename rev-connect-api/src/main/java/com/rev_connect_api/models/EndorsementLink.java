package com.rev_connect_api.models;

import org.hibernate.validator.constraints.URL;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;

/**
 * This class is a model for the EndorsementLink object. It is used to store
 * information about a user's endorsement link
 */
@Entity
@Table(name = "endorsement_links")
public class EndorsementLink {

  /**
   * The id of the endorsement link, which will be automatically generated by the
   * database
   */
  @Id
  @GeneratedValue(strategy = GenerationType.IDENTITY)
  @Column(name = "id")
  private Long id;

  /**
   * The user id of the user who created the endorsement link
   */
  @Column(name = "user_id")
  private Long businessUserId;

  /**
   * The URL of the endorsement link
   */
  @Column(name = "link")
  @URL(message = "Invalid URL format for endorsement link: ${validatedValue}")
  private String link;

  /**
   * The link_text of the endorsement link (e.g. "LinkedIn Profile") which will
   * be displayed to the user
   */
  @Column(name = "link_text")
  private String link_text;

  /**
   * Constructor for the EndorsementLink object
   * 
   * @param businessUserId      The user id of the user who created the endorsement link
   * @param link        The URL of the endorsement link
   * @param link_text The link_text of the endorsement link
   */
  public EndorsementLink(Long businessUserId, String link, String link_text) {
    this.businessUserId = businessUserId;
    this.link = link;
    this.link_text = link_text;
  }

  /**
   * Default constructor for the EndorsementLink object
   */
  public EndorsementLink() {
  }

  /**
   * Get the id of the endorsement link
   * 
   * @return The id of the endorsement link
   */
  public Long getId() {
    return id;
  }

  /**
   * Set the id of the endorsement link
   * 
   * @param id The id of the endorsement link
   */
  public void setId(Long id) {
    this.id = id;
  }

  /**
   * Get the user id of the user who created the endorsement link
   * 
   * @return The user id of the user who created the endorsement link
   */
  public Long getUser() {
    return businessUserId;
  }

  /**
   * Set the user id of the user who created the endorsement link
   * 
   * @param businessUserId The user id of the user who created the endorsement link
   */
  public void setUser(Long businessUserId) {
    this.businessUserId = businessUserId;
  }

  /**
   * Get the URL of the endorsement link
   * 
   * @return The URL of the endorsement link
   */
  public String getLink() {
    return link;
  }

  /**
   * Set the URL of the endorsement link
   * 
   * @param link The URL of the endorsement link
   */
  public void setLink(String link) {
    this.link = link;
  }

  /**
   * Get the link_text of the endorsement link
   * 
   * @return The link_text of the endorsement link
   */
  public String getlink_text() {
    return link_text;
  }

  /**
   * Set the link_text of the endorsement link
   * 
   * @param link_text The link_text of the endorsement link
   */
  public void setlink_text(String link_text) {
    this.link_text = link_text;
  }

  /**
   * Overrides the default equals() method adds functionality to tell when two
   * objects are identical, allowing
   * Assert.assertEquals and List.contains to function.
   * 
   * @param obj The object to compare to the EndorsementLink object
   * @return True if the objects are equal, false otherwise
   */
  @Override
  public boolean equals(Object obj) {
    if (this == obj)
      return true;
    if (obj == null || getClass() != obj.getClass())
      return false;

    EndorsementLink that = (EndorsementLink) obj;

    return (id != null ? id.equals(that.id) : that.id == null)
        && (businessUserId != null ? businessUserId.equals(that.businessUserId) : that.businessUserId == null)
        && (link != null ? link.equals(that.link) : that.link == null)
        && (link_text != null ? link_text.equals(that.link_text) : that.link_text == null);
  }

  /**
   * Overrides the default toString() method allows for easy debugging.
   * 
   * @return a String representation of this class.
   */
  @Override
  public String toString() {
    return "EndorsementLink{" +
        "id=" + id +
        ", user=" + businessUserId +
        ", link='" + link + '\'' +
        ", link_text='" + link_text + '\'' +
        '}';
  }

}
